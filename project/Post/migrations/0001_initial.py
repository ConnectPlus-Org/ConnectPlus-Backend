# Generated by Django 4.1.4 on 2023-01-22 15:17

import cloudinary_storage.storage
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Profile', '0002_skillslist'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Profile.profile')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
        migrations.CreateModel(
            name='CommentReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Post.comment')),
            ],
            options={
                'verbose_name': 'Comment Reply',
                'verbose_name_plural': 'Comment Replies',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('video_linked', models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.VideoMediaCloudinaryStorage(), upload_to='post/videos/')),
                ('doc_linked', models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='post/docs')),
                ('edited', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('commented_by', models.ManyToManyField(related_name='commented_posts', through='Post.Comment', to='Profile.profile')),
                ('parent_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Post.post')),
                ('post_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_posts', to='Profile.profile')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
            },
        ),
        migrations.CreateModel(
            name='ReactionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Reaction Type',
                'verbose_name_plural': 'Reaction Types',
            },
        ),
        migrations.CreateModel(
            name='ReplyReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_reply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Post.commentreply')),
                ('reaction_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Profile.profile')),
                ('reaction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Post.reactiontype')),
            ],
            options={
                'verbose_name': 'Reply Reaction',
                'verbose_name_plural': 'Reply Reactions',
                'unique_together': {('comment_reply', 'reaction_owner')},
            },
        ),
        migrations.CreateModel(
            name='PostReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Post.post')),
                ('reacted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_reactions', to='Profile.profile')),
                ('reaction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Post.reactiontype')),
            ],
            options={
                'verbose_name': 'Post Reaction',
                'verbose_name_plural': 'Post Reactions',
                'unique_together': {('post', 'reacted_by')},
            },
        ),
        migrations.CreateModel(
            name='PostImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='post/images/')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Post.post')),
            ],
            options={
                'verbose_name': 'Post Image',
                'verbose_name_plural': 'Post Images',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='reacted_by',
            field=models.ManyToManyField(related_name='reacted_posts', through='Post.PostReaction', to='Profile.profile'),
        ),
        migrations.AddField(
            model_name='post',
            name='saved_by',
            field=models.ManyToManyField(blank=True, related_name='saved_posts', to='Profile.profile'),
        ),
        migrations.AddField(
            model_name='post',
            name='viewed_by',
            field=models.ManyToManyField(blank=True, related_name='viewed_posts', to='Profile.profile'),
        ),
        migrations.CreateModel(
            name='HashTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=255)),
                ('associated_posts', models.ManyToManyField(blank=True, related_name='hashtags', to='Post.post')),
                ('followed_by', models.ManyToManyField(related_name='followed_hastags', to='Profile.profile')),
            ],
            options={
                'verbose_name': 'HashTag',
                'verbose_name_plural': 'HashTags',
            },
        ),
        migrations.AddField(
            model_name='commentreply',
            name='reacted_by',
            field=models.ManyToManyField(related_name='reacted_replies', through='Post.ReplyReaction', to='Profile.profile'),
        ),
        migrations.AddField(
            model_name='commentreply',
            name='reply_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Profile.profile'),
        ),
        migrations.CreateModel(
            name='CommentReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Post.comment')),
                ('reaction_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Profile.profile')),
                ('reaction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Post.reactiontype')),
            ],
            options={
                'verbose_name': 'Comment Reaction',
                'verbose_name_plural': 'Comment Reactions',
                'unique_together': {('comment', 'reaction_owner')},
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Post.post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='reacted_by',
            field=models.ManyToManyField(related_name='reacted_comments', through='Post.CommentReaction', to='Profile.profile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='replied_by',
            field=models.ManyToManyField(related_name='replied_comments', through='Post.CommentReply', to='Profile.profile'),
        ),
    ]
